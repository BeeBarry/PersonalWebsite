---
import { getCollection } from 'astro:content';
import Layout from '../../../layouts/Layout.astro';
import { categories } from '../../../data/categories';
import ZoomableImage from '../../../components/ZoomableImage.astro';

export async function getStaticPaths() {
    const allArticles = await getCollection('learn');

    return allArticles.map(entry => ({
        params: {
            category: entry.data.category,
            article: entry.id  // Använder entry.id istället för entry.slug
        },
        props: { entry },
    }));
}

const { entry } = Astro.props;
const { Content } = await entry.render();

// Hämta category från entry.data
const currentCategory = entry.data.category;

// Hitta kategori-informationen
const categoryInfo = categories.find(c => c.slug === currentCategory);
if (!categoryInfo) {
    throw new Error(`Category ${currentCategory} not found`);
}
---

<Layout pageTitle={entry.data.title} containerType="wide">

    <article class="learn-article">




        <header class="meta-section">
            <div class="meta-content">
                <h1>{entry.data.title}</h1>
                <p class="description">{entry.data.description}</p>

                {/* Tags visas endast om de finns */}
                {entry.data.tags && (
                        <div class="meta-tags">
                            {entry.data.tags.map(tag => (
                                    <span class="tag">{tag}</span>
                            ))}
                        </div>
                )}
            </div>
        </header>



        <div class="article-content">
            <!-- Här är förändringen - lägg till components prop -->
            <Content components={{ ZoomableImage }} />
        </div>
    </article>
</Layout>

<style>
    /* Grundläggande artikel-container */
    .learn-article {
        margin: 2rem 0;
        padding: 2rem;
        background-color: var(--white);
        border-radius: 12px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        transition: background-color 0.3s ease;
    }

    /* Meta-sektion (artikelheader) */
    .meta-section {
        background-color: rgba(248, 249, 250, 0.8);
        border-radius: 12px 12px 0 0;
        padding: 2rem;
        margin-bottom: 2rem;
    }

    .meta-section h1 {
        font-family: var(--header);
        font-size: 1.8rem;
        color: var(--text-light);
        margin: 0 0 0.5rem 0;
    }

    .description {
        font-family: var(--body);
        font-size: 1rem;
        color: var(--text-light);
        margin: 0 0 1rem 0;
    }

    /* Tagg-styling */
    .meta-tags {
        display: flex;
        gap: 0.5rem;
        margin-top: 1rem;
    }

    .tag {
        background-color: var(--main-green);
        color: var(--white);
        padding: 0.2rem 0.8rem;
        border-radius: 1rem;
        font-size: 0.8rem;
        font-family: var(--body);
    }

    /* Artikel-innehåll */
    .article-content {
        font-family: var(--body);
        line-height: 1.7;
    }

    .article-content :global(h2) {
        font-family: var(--header);
        color: var(--text-light);
        font-size: 2.1rem;
        margin: 2rem 0 1rem;
        text-decoration: underline;
        text-decoration-color: var(--main-brown);
        text-decoration-thickness: 4px;
        text-underline-offset: 8px;
    }



    .article-content p {
        font-size: 1.1rem;
        text-indent: 1rem;
        line-height: 1.7;
        color: var(--text-light);
        margin-bottom: 1.5rem;
    }

    .article-content ul,
    .article-content ol {
        font-size: 1.1rem;
        line-height: 1.7;
        color: var(--text-light);
        margin-bottom: 1.5rem;
        padding-left: 2rem;
    }

    .article-content :global(li) {
        font-size: 1.0rem;
        margin-bottom: 0.4rem;
    }

    /* Dark mode */
    html:not(.light) .learn-article {
        background-color: #2a2a3c;
    }

    html:not(.light) .meta-section {
        background-color: #2d2d3c;
    }

    html:not(.light) .article-content :global(h2) {
        color: var(--white);
    }

    html:not(.light) .meta-section h1,
    html:not(.light) .description,
    html:not(.light) .article-content p,
    html:not(.light) .article-content ul,
    html:not(.light) .article-content ol,
    html:not(.light) .article-content li {
        color: var(--white);
    }

    /* Responsiv design */
    @media only screen and (max-width: 600px) {
        .learn-article {
            padding: 1.5rem;
            margin: 1rem 0;
        }

        .meta-section h1 {
            font-size: 1.6rem;
        }

        .article-content h2 {
            font-size: 1.8rem;
        }
    }
</style>